spell_check_setup()
install.packages("spelling")
library(MRMCsamplesize)
spelling::spell_check_package("MRMCsamplesize")
spelling::spell_check_package("C:/Users/Dr. Dennis Robert/Desktop/MRMCsamplesize")
spelling::spell_check_package("C:/Users/Dr. Dennis Robert/Desktop/MRMCsamplesize")
spelling::spell_check_package("C:/Users/Dr. Dennis Robert/Desktop/MRMCsamplesize")
library(MRMCsamplesize)
spelling::spell_check_package("C:/Users/Dr. Dennis Robert/Desktop/MRMCsamplesize")
library(MRMCsamplesize)
sampleSize_Standalone <- function(endpoint = "auc",
theta,
precision,
R = 1,
power = 0.8,
alpha = 0.05,
var_auc = "obuchowski",
reader_var_estimation_method = 'normal',
n_reading_sessions_per_reader = 2,
corr = FALSE,
ICC = NULL,
s = NULL){
if(tolower(endpoint) %in% c("se", "s", "sens", "spec", "sp", "sensitivity", "specificity") | var_auc == "blume"){
var.theta= theta*(1-theta) #variance calculation for Se
}else if(tolower(endpoint) %in% c("auc") & var_auc == "obuchowski"){
A <-  stats::qnorm(theta)*1.414
var.theta <- ((0.0099 * exp(-A^2/2)) * ( (5*A^2 +8) + (A^2 +8)/R))
}else{
stop("Endpoint has to be either 'Sensitivity' or 'AUC'")
}
num = (qnorm(1-alpha/2) + qnorm(power)) * sqrt(V)
den = precision
n = ceiling((num/den)^2)
nControls <- ceiling(n*R)
n.total <- n + nControls
if (!corr){
text <- "No adjustment for ICC"
nUnits_i <- n
nCases_c <- NA
nControls <- nControls
nTotal <- n.total
de <- NA
s <- NA
} else {
if(is.null(ICC) | is.null(s)) {stop("ICC and s must be valid numeric values to take correlation within diseased cases into account")}
text <- "Adjusted for ICC"
s <- s
de = 1 + (s-1)*ICC
nUnits_i <- n
nUnits_c = ceiling(nUnits_i * de)
nCases_c = ceiling(nUnits_c/s)
nControls = ceiling(nCases_c*R)
nTotal = nCases_c + nControls
}
METHOD <- "Sample Size Estimation Results"
NOTE <- paste0("\n",
"ICC: Is intra-class correlation (ICC) considered while estimating sample size", "\n",
"nUnits_i: Number of required units with presence of at least one lesion assuming independence between units", "\n",
"nCases_c: Number of required cases with presence of at least one lesion after adjusting for ICC", "\n",
"nControls: Number of required controls (images/patients without any lesion)", "\n",
"nTotal: Total sample size (cases)", "\n",
"J: Number of readers", "\n",
"nReads: Total number of reads in the MRMC study", "\n",
"DE: Design effect due to ICC", "\n",
"s: Assumed average number of lesions in cases with lesions", "\n",
"power: Assumed power", "\n",
"alpha: Significance level (Type I error rate)", "\n"
)
out <- structure(list(ICC = text,
nUnits_i = nUnits_i,
nCases_c = nCases_c,
nControls = nControls,
nTotal = nTotal,
J = J,
nReads = nReads,
DE = de,
s = s,
power = power,
alpha = alpha,
method = METHOD, note = NOTE), class = "power.htest")
print(out)
return(list("SampleSizeResults" = out))
}
SeSp_samplesize(theta = 0.9, L = 0.05, power = 0.8)
SeSp_samplesize <- function(theta, L, alpha = 0.05, power = 0.8){
V <- theta*(1-theta)
num = (qnorm(1-alpha/2) + qnorm(power)) * sqrt(V)
den = L
n = ceiling((num/den)^2)
return(n)
}
SeSp_samplesize(theta = 0.9, L = 0.05, power = 0.8)
sampleSize_Standalone(endpoint = "Se", theta = 0.9, precision = 0.05, R = 1)
sampleSize_Standalone <- function(endpoint = "auc",
theta,
precision,
R = 1,
power = 0.8,
alpha = 0.05,
var_auc = "obuchowski",
reader_var_estimation_method = 'normal',
n_reading_sessions_per_reader = 2,
corr = FALSE,
ICC = NULL,
s = NULL){
if(tolower(endpoint) %in% c("se", "s", "sens", "spec", "sp", "sensitivity", "specificity") | var_auc == "blume"){
var.theta= theta*(1-theta) #variance calculation for Se
}else if(tolower(endpoint) %in% c("auc") & var_auc == "obuchowski"){
A <-  stats::qnorm(theta)*1.414
var.theta <- ((0.0099 * exp(-A^2/2)) * ( (5*A^2 +8) + (A^2 +8)/R))
}else{
stop("Endpoint has to be either 'Sensitivity' or 'AUC'")
}
num = (qnorm(1-alpha/2) + qnorm(power)) * sqrt(var.theta)
den = precision
n = ceiling((num/den)^2)
nControls <- ceiling(n*R)
n.total <- n + nControls
if (!corr){
text <- "No adjustment for ICC"
nUnits_i <- n
nCases_c <- NA
nControls <- nControls
nTotal <- n.total
de <- NA
s <- NA
} else {
if(is.null(ICC) | is.null(s)) {stop("ICC and s must be valid numeric values to take correlation within diseased cases into account")}
text <- "Adjusted for ICC"
s <- s
de = 1 + (s-1)*ICC
nUnits_i <- n
nUnits_c = ceiling(nUnits_i * de)
nCases_c = ceiling(nUnits_c/s)
nControls = ceiling(nCases_c*R)
nTotal = nCases_c + nControls
}
METHOD <- "Sample Size Estimation Results"
NOTE <- paste0("\n",
"ICC: Is intra-class correlation (ICC) considered while estimating sample size", "\n",
"nUnits_i: Number of required units with presence of at least one lesion assuming independence between units", "\n",
"nCases_c: Number of required cases with presence of at least one lesion after adjusting for ICC", "\n",
"nControls: Number of required controls (images/patients without any lesion)", "\n",
"nTotal: Total sample size (cases)", "\n",
"J: Number of readers", "\n",
"nReads: Total number of reads in the MRMC study", "\n",
"DE: Design effect due to ICC", "\n",
"s: Assumed average number of lesions in cases with lesions", "\n",
"power: Assumed power", "\n",
"alpha: Significance level (Type I error rate)", "\n"
)
out <- structure(list(ICC = text,
nUnits_i = nUnits_i,
nCases_c = nCases_c,
nControls = nControls,
nTotal = nTotal,
J = J,
nReads = nReads,
DE = de,
s = s,
power = power,
alpha = alpha,
method = METHOD, note = NOTE), class = "power.htest")
print(out)
return(list("SampleSizeResults" = out))
}
sampleSize_Standalone(endpoint = "Se", theta = 0.9, precision = 0.05, R = 1)
sampleSize_Standalone <- function(endpoint = "auc",
theta,
precision,
R = 1,
power = 0.8,
alpha = 0.05,
var_auc = "obuchowski",
reader_var_estimation_method = 'normal',
n_reading_sessions_per_reader = 2,
corr = FALSE,
ICC = NULL,
s = NULL){
if(tolower(endpoint) %in% c("se", "s", "sens", "spec", "sp", "sensitivity", "specificity") | var_auc == "blume"){
var.theta= theta*(1-theta) #variance calculation for Se
}else if(tolower(endpoint) %in% c("auc") & var_auc == "obuchowski"){
A <-  stats::qnorm(theta)*1.414
var.theta <- ((0.0099 * exp(-A^2/2)) * ( (5*A^2 +8) + (A^2 +8)/R))
}else{
stop("Endpoint has to be either 'Sensitivity' or 'AUC'")
}
num = (qnorm(1-alpha/2) + qnorm(power)) * sqrt(var.theta)
den = precision
n = ceiling((num/den)^2)
nControls <- ceiling(n*R)
n.total <- n + nControls
if (!corr){
text <- "No adjustment for ICC"
nUnits_i <- n
nCases_c <- NA
nControls <- nControls
nTotal <- n.total
de <- NA
s <- NA
} else {
if(is.null(ICC) | is.null(s)) {stop("ICC and s must be valid numeric values to take correlation within diseased cases into account")}
text <- "Adjusted for ICC"
s <- s
de = 1 + (s-1)*ICC
nUnits_i <- n
nUnits_c = ceiling(nUnits_i * de)
nCases_c = ceiling(nUnits_c/s)
nControls = ceiling(nCases_c*R)
nTotal = nCases_c + nControls
}
METHOD <- "Sample Size Estimation Results"
NOTE <- paste0("\n",
"ICC: Is intra-class correlation (ICC) considered while estimating sample size", "\n",
"nUnits_i: Number of required units with presence of at least one lesion assuming independence between units", "\n",
"nCases_c: Number of required cases with presence of at least one lesion after adjusting for ICC", "\n",
"nControls: Number of required controls (images/patients without any lesion)", "\n",
"nTotal: Total sample size (cases)", "\n",
"DE: Design effect due to ICC", "\n",
"s: Assumed average number of lesions in cases with lesions", "\n",
"power: Assumed power", "\n",
"alpha: Significance level (Type I error rate)", "\n"
)
out <- structure(list(ICC = text,
nUnits_i = nUnits_i,
nCases_c = nCases_c,
nControls = nControls,
nTotal = nTotal,
DE = de,
s = s,
power = power,
alpha = alpha,
method = METHOD, note = NOTE), class = "power.htest")
print(out)
return(list("SampleSizeResults" = out))
}
sampleSize_Standalone(endpoint = "Se", theta = 0.9, precision = 0.05, R = 1)
sampleSize_Standalone(endpoint = "auc", theta = 0.9, precision = 0.05, R = 1)
alpha = 0.05
power = 0.80
L = 0.05
theta = 0.9
A <- qnorm(theta)*1.414
R = 5.8
V <- ((0.0099 * exp(-A^2/2)) * ( (5*A^2 +8) + (A^2 +8)/R))
num = (qnorm(1-alpha/2) + qnorm(power)) * sqrt(V)
den = L
n = ceiling((num/den)^2)
ceiling(n*(1+R))
n
alpha = 0.05
power = 0.80
L = 0.05
theta = 0.9
A <- qnorm(theta)*1.414
R = 1
V <- ((0.0099 * exp(-A^2/2)) * ( (5*A^2 +8) + (A^2 +8)/R))
num = (qnorm(1-alpha/2) + qnorm(power)) * sqrt(V)
den = L
n = ceiling((num/den)^2)
ceiling(n*(1+R))
n
alpha = 0.05
power = 0.80
L = 0.05
theta = 0.9
A <- qnorm(theta)*1.414
R = 1
V <- ((0.0099 * exp(-A^2/2)) * ( (5*A^2 +8) + (A^2 +8)/R))
num = (qnorm(1-alpha/2) + qnorm(power)) * sqrt(V)
den = L
n = ceiling((num/den)^2)
ceiling(n*(1+R))
n
sampleSize_Standalone(endpoint = "auc", theta = 0.9, precision = 0.05, R = 1, corr = T)
sampleSize_Standalone(endpoint = "auc", theta = 0.9, precision = 0.05, R = 1, corr = T, corr = 0.5)
sampleSize_Standalone(endpoint = "auc", theta = 0.9, precision = 0.05, R = 1, corr = T, icc = 0.5)
sampleSize_Standalone(endpoint = "auc", theta = 0.9, precision = 0.05, R = 1, corr = T, ICC = 0.5)
sampleSize_Standalone(endpoint = "auc", theta = 0.9, precision = 0.05, R = 1, corr = T, ICC = 0.5, s = 1.25)
sampleSize_Standalone(endpoint = "Se", theta = 0.8, precision = 0.05, R = 1)
library(MRMCsamplesize)
?MRMCsamplesize
??MRMCsamplesize
pkgdown::build_site_github_pages(pkg = "MRMCsamplesize")
pkgdown::build_site_github_pages(pkg = "C:/Users/Dr. Dennis Robert/Desktop/MRMCsamplesize")
